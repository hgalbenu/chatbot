# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2017-04-18 10:23
from __future__ import unicode_literals

import chatbot.apps.profiles.heavenly
import chatbot.apps.profiles.intercom
from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('jobs', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('debts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ExpertNoteTemplate',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, null=True, verbose_name='name')),
                ('body', models.TextField(blank=True, null=True, verbose_name='body')),
            ],
            options={
                'ordering': ('-modified', '-created'),
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('session_id', models.TextField(primary_key=True, serialize=False, verbose_name='session id')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('botId', models.PositiveIntegerField(default=33251, verbose_name='bot id')),
                ('knowWhereToStart', models.TextField(blank=True, null=True, verbose_name='know where to start')),
                ('totalDebt', models.TextField(blank=True, null=True, verbose_name='total debt')),
                ('averageInterestRate', models.TextField(blank=True, null=True, verbose_name='average interest rate')),
                ('monthlyDebtPayments', models.TextField(blank=True, null=True, verbose_name='monthly debt payments')),
                ('incomeYN', models.TextField(blank=True, null=True, verbose_name='income YN')),
                ('incomeAmount', models.TextField(blank=True, null=True, verbose_name='income amount')),
                ('incomeConsistency', models.TextField(blank=True, null=True, verbose_name='income consistency')),
                ('situationDetail', models.TextField(blank=True, null=True, verbose_name='situation detail')),
                ('is_married', models.NullBooleanField(verbose_name='is married')),
                ('houseHoldSize', models.TextField(blank=True, null=True, verbose_name='household size')),
                ('homeEquity', models.TextField(blank=True, null=True, verbose_name='home equity')),
                ('ownHome', models.TextField(blank=True, null=True, verbose_name='own home')),
                ('behindOnPayments', models.TextField(blank=True, null=True, verbose_name='behind on payments')),
                ('daysPastDue', models.TextField(blank=True, null=True, verbose_name='days past due')),
                ('firstName', models.TextField(blank=True, null=True, verbose_name='first name')),
                ('questionConsultation', models.TextField(blank=True, null=True, verbose_name='question consultation')),
                ('state', models.TextField(blank=True, null=True, verbose_name='state')),
                ('phoneOrEmail', models.TextField(blank=True, null=True, verbose_name='phone or email')),
                ('phone', models.TextField(blank=True, null=True, verbose_name='phone')),
                ('basic_hardship', models.TextField(blank=True, null=True, verbose_name='basic hardship')),
                ('employment_status', models.TextField(blank=True, null=True, verbose_name='employment status')),
                ('additional_income', models.NullBooleanField(verbose_name='additional income')),
                ('additional_income_consistent', models.NullBooleanField(verbose_name='additional income consistent')),
                ('additional_income_amount', models.TextField(blank=True, null=True, verbose_name='additional income amount')),
                ('credit_score_importance', models.TextField(blank=True, null=True, verbose_name='credit score importance')),
                ('needs_future_student_loan', models.TextField(blank=True, null=True, verbose_name='needs future student loan')),
                ('needs_future_auto_loan', models.TextField(blank=True, null=True, verbose_name='needs future auto loan')),
                ('needs_future_mortgage', models.TextField(blank=True, null=True, verbose_name='needs future mortgage')),
                ('revenue_potential', models.DecimalField(blank=True, decimal_places=2, max_digits=18, null=True, verbose_name='revenue potential')),
                ('waiting_data_review_at', models.DateTimeField(blank=True, null=True)),
                ('waiting_expert_review_at', models.DateTimeField(blank=True, null=True)),
                ('waiting_user_schedule_at', models.DateTimeField(blank=True, null=True)),
                ('waiting_user_answers_at', models.DateTimeField(blank=True, null=True)),
                ('question_answered_at', models.DateTimeField(blank=True, null=True)),
                ('waiting_consultation_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('user_status', models.TextField(blank=True, default='None', null=True, verbose_name='conclusion')),
                ('no_action_required_at', models.DateTimeField(blank=True, null=True)),
                ('crn_settlement_at', models.DateTimeField(blank=True, null=True)),
                ('settlement_referral_at', models.DateTimeField(blank=True, null=True)),
                ('bankruptcy_referral_at', models.DateTimeField(blank=True, null=True)),
                ('student_loan_referral_at', models.DateTimeField(blank=True, null=True)),
                ('debt_defense_referral_at', models.DateTimeField(blank=True, null=True)),
                ('credit_counseling_referral_at', models.DateTimeField(blank=True, null=True)),
                ('other_action_required_at', models.DateTimeField(blank=True, null=True)),
                ('conclusion', models.TextField(blank=True, default='None', null=True, verbose_name='conclusion')),
                ('expert_note', models.TextField(blank=True, null=True, verbose_name='expert note')),
                ('expert_note_template_name', models.TextField(blank=True, default='None', null=True, verbose_name='expert note template name')),
                ('intercom_user_id', models.TextField(blank=True, null=True, verbose_name='intercom user id')),
                ('heavenly_request', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True, verbose_name='heavenly_request')),
                ('heavenly_response', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True, verbose_name='heavenly_response')),
                ('action', models.TextField(blank=True, null=True, verbose_name='action')),
                ('heavenly_updated_at', models.DateTimeField(blank=True, null=True)),
                ('current_debt', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='current_for', to='debts.Debt', verbose_name='current job')),
                ('current_job', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='current_for', to='jobs.Job', verbose_name='current job')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_profile', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'ordering': ('-modified', '-created'),
                'get_latest_by': 'modified',
                'abstract': False,
            },
            bases=(models.Model, chatbot.apps.profiles.heavenly.Heavenly, chatbot.apps.profiles.intercom.Intercom),
        ),
    ]
